<%
    core.user.auth();

if(!request.username){
    htmlheader("Register");
    core.user.html.register({to: request.getHeader('Referer')});
    htmlfooter();
    return;

}
var username = request.username;
var email = request.email;
var password = request.password;
var firstname = request.firstname;
var lastname = request.lastname;

var to = request.to;
to = to || '/';

// validate
if ( ! ( username && username.trim().length >= 5 ) )
    throw "Username must be at least 5 characters long.";

if ( ! ( password && password.trim().length >= 5 ) )
    throw "Password must be at least 5 characters long.";

if ( ! ( email && email.trim().length >= 3 ) )
    throw "Email is not valid.";

if ( ! ( firstname.trim() && lastname.trim() ) )
    throw "First name and last name are required.";

if ( User.config.useCaptcha && ! Captcha.valid( request ) ) {
    throw "CAPTCHA entry is incorrect.";
}

// add

if ( db.users.findOne( { name : username } ) )
    throw "This username is already taken.";

if ( db.users.findOne( { email : email } ) )
    throw "A user with this email already exists.";

u = new User();
u.name = username;
u.email = email;
u.setPassword( password );
u.firstname = firstname;
u.lastname = lastname;
db.users.save( u );

// log in
Auth.cookie.login( request , response , u );

user = u;

if(User.requirements.confirmed_email){
    core.user.confirm_send();
}

if(notice)
    to = new URL(to).addArg("notice", notice).toString();

// re-direct back
response.setResponseCode( 301 );
response.setHeader( "Location" , to);
%>
