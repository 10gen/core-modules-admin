<%
var n;

log(request.filter+" "+request.log_level+" "+request.ns);
var ll = request.log_level;
if(request.action == "filter") {
    var searchObj = {};
    if(request.log_level && request.log_level != "ALL") searchObj.level = request.log_level;
    if(request.ns) searchObj.logger = request.ns;
    if(request.filter) searchObj.msg = new RegExp(request.filter);
    n = db._logs.find( searchObj ).limit(100).toArray();
}
else
    n = db._logs.find().limit(100).toArray();

if ( !n )
    throw "no all";
n.reverse();

var since = null;
if ( request.since ){
    since = new Date( parseFloat( request.since ) );
}

if ( since ){
    n = n.filter( function( z ){
	return z.date > since;
    } );
}

response.setHeader( "Content-Type" , "text/json" );

n.forEach( function(z){
    if ( z == null )
	throw "why is z null";
    z.thread = null;
    z._id = null;
    z.level = z.level.toString();
    z.msg = z.msg.replace( /[\r\n]+/ , "<br>" );
    if ( z.throwable )
	z.throwable = z.throwable.toString();
} );

print( tojson( n ) );

%>
