<% /**
*      Copyright (C) 2008 10gen Inc.
*
*    Licensed under the Apache License, Version 2.0 (the "License");
*    you may not use this file except in compliance with the License.
*    You may obtain a copy of the License at
*
*       http://www.apache.org/licenses/LICENSE-2.0
*
*    Unless required by applicable law or agreed to in writing, software
*    distributed under the License is distributed on an "AS IS" BASIS,
*    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*    See the License for the specific language governing permissions and
*    limitations under the License.
*/

if(user.permissions["0"] == "admin") {
    if( request.set != null ) {
        db.setProfilingLevel(parseInt(request.set));
        response.sendRedirectTemporary("dbprofile");
        return;
    }
}
print("Profiling level set to " + db.getProfilingLevel());
print(" ");
%>

<%
head.addCSS("NOCDN/admin/assets/admin.css");

core.content.table();

var rowsPerPage = 100;


adminRoot.pieces.dbprofile(); %>
<div id="myCollection">
<%
request.action = "searchprofile";
request.reverse = "true";
var table = adminRoot.table();
%>
</div>

<div id="myMarkedUpContainer" class="yui-skin-sam"></div>
<table id="temp"></table>

<!--CSS file (default YUI Sam Skin) -->
<link type="text/css" rel="stylesheet" href="/@@/yui/current/datatable/assets/skins/sam/datatable.css">
<link type="text/css" rel="stylesheet" href="/@@/yui/current/logger/assets/skins/sam/logger.css">
<link rel="stylesheet" type="text/css" href="/@@/yui/current/button/assets/skins/sam/button.css" />
<link rel="stylesheet" type="text/css" href="/@@/yui/current/container/assets/skins/sam/container.css" />


<!-- Dependencies -->
<script type="text/javascript" src="/@@/yui/current/yahoo-dom-event/yahoo-dom-event.js"></script>
<script type="text/javascript" src="/@@/yui/current/element/element-beta-min.js"></script>
<script type="text/javascript" src="/@@/yui/current/button/button-min.js"></script>
<script type="text/javascript" src="/@@/yui/current/datasource/datasource-beta-debug.js"></script>

<!-- OPTIONAL: JSON Utility -->
<script type="text/javascript" src="/@@/yui/current/json/json-min.js"></script>

<!-- OPTIONAL: Drag Drop (enables resizeable or reorderable columns) -->
<script type="text/javascript" src="/@@/yui/current/dragdrop/dragdrop-min.js"></script>

<!-- Source files -->
<script type="text/javascript" src="/@@/yui/current/datatable/datatable-beta-debug.js"></script>
<script type="text/javascript" src="/@@/yui/current/logger/logger-debug.js"></script>
<script type="text/javascript" src="/@@/yui/current/container/container-min.js"></script>

<script type="text/javascript">

var currentPage = 1;
function loadPage(pagenum) {
    currentPage = pagenum;
    refreshTable("currentPage="+pagenum);
}


<%
// why would a non-admin user be on the admin page?
if(user.permissions["0"] == "admin") {
    var level = db.getProfilingLevel();
    level = (level == -1) ? 0 : level;
    print('document.getElementById("set").options['+ level +'].selected = true');
}
%>


// Form handling
function clearTextBox(id, defaultVal) {
    var target = document.getElementById(id)
    if(target.value == defaultVal)
        target.value = "";
}
function resetTextBox(id, str) {
    var elem = document.getElementById(id);
    if(elem.value.trim() == "") {
        elem.value = str
    }
}
function toggleEnableText(id, defaultVal, defaultVal2) {
    if(id == "re") {
        var elem = document.getElementById(id);
        if(elem.disabled) {
            elem.disabled = false;
            clearTextBox(elem.id, defaultVal);
            elem.focus();
        }
        else {
            resetTextBox(elem.id, defaultVal);
            elem.disabled = true;
        }
    }
    else {
        var from = document.getElementById(id+"_from");
        var to = document.getElementById(id+"_to");
        if(from.disabled) {
            to.disabled = false;
            from.disabled = false;
            clearTextBox(from.id, defaultVal);
            from.focus();
        }
        else {
            to.disabled = true;
            from.disabled = true;
            resetTextBox(from.id, defaultVal);
            resetTextBox(from.id, (defaultVal2) ? defaultVal2 : defaultVal);
        }
    }
}

var passData, lastSearch;
var pushNode = document.getElementById( "pushNode" );
var parent = pushNode.parentNode;

function refreshTable(passData){
    if(passData)
        passData = passData+"&";
    else
        passData = "";

    ajax("&action=searchprofile&reverse=true&"+passData+lastSearch, "table", function(response) {
        document.getElementById("myCollection").innerHTML = response;
    });
}

function doSearch() {
    var passData = getSearchArgs();
    if(passData == -1) return;
    lastSearch = passData;
    refreshTable();
}

function refreshSearch() {
    lastSearch = "";
    document.getElementById("time_from").value="YYYY-MM-DD HH:MM:SS";
    document.getElementById("time_to").value="YYYY-MM-DD HH:MM:SS";
    document.getElementById("ms_from").value = "0";
    document.getElementById("ms_to").value="999999";
    document.getElementById("refilter").checked = false;
    document.getElementById("timefilter").checked = false;
    document.getElementById("msfilter").checked = false;
    document.getElementById("re").value = "";
    document.getElementById("time_from").disabled = true;
    document.getElementById("time_to").disabled = true;
    document.getElementById("ms_from").disabled = true;
    document.getElementById("ms_to").disabled = true;
    document.getElementById("re").disabled = true;
    refreshTable();
}

var recordType = "all";
function getSearchArgs() {
    var pairs = [];
    if(document.getElementById("timefilter").checked) {
        if(validateTime()) {
            pairs.push("time_from="+document.getElementById("time_from").value);
            pairs.push("time_to="+document.getElementById("time_to").value);
        }
        else {
            alert("Bad TimeStamp","Please make sure the beginning timestamp value in your filter is before your ending timestamp value");
            return -1;
        }
    }

    if(document.getElementById("msfilter").checked) {
        if(validateMs()) {
            pairs.push("ms_from="+document.getElementById("ms_from").value);
            pairs.push("ms_to="+document.getElementById("ms_to").value);
        }
        else {
            simpleDlg("Bad Millisecond Range", "Please make sure the beginning millisecond value in your filter is before your ending millisecond value");
            return -1;
        }
    }

    if(document.getElementById("refilter").checked) {
        if(validateRe())
            pairs.push("re="+document.getElementById("re").value);
        else {
            simpleDlg("Bad Information RegExp", "Your Regular Expression is not valid; Please fix and resubmit");
            return -1;
        }
    }
    pairs.push("record_type="+recordType);

    return pairs.join('&');
}

function simpleDlg(hd, msg) {
    var simpledialog1 = new YAHOO.widget.SimpleDialog("someDialog",
        { width: "300px",
        fixedcenter: true,
        draggable: true,
        visible: false,
        close: true,
        text: msg,
        buttons: [ { text:"OK", handler:function(){this.hide();}, isDefault:true } ]
        } );
    simpledialog1.setHeader(hd);
    simpledialog1.render("myMarkedUpContainer");
    simpledialog1.show();
}

function validateTime() {
    re = new RegExp(/^\d{4}-\d{2}-\d{2} [0-2][0-9]:[0-5][0-9]:[0-5][0-9]$/);
    return re.test(document.getElementById("time_from").value) && re.test(document.getElementById("time_to").value);
}
function validateMs() {
    return (/^\d{1,6}$/.test(document.getElementById("ms_to").value) && /^\d{1,6}$/.test(document.getElementById("ms_to").value)) &&
    (parseInt(document.getElementById("ms_to").value) <= parseInt(document.getElementById("ms_to").value));
}
function validateRe() {
    try {
        val = new RegExp(document.getElementById("re").value);
    }
    catch(e) {
        return false;
    }
    return true;
}

function changeRecordType() {
    recordType = document.getElementById("record_type").value;
    refreshTable("record_type="+document.getElementById("record_type").value);
}

</script>
