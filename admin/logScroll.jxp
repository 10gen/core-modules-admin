<%
head.addCSS("NOCDN/~~/admin/assets/dbview.css");
head.addScript("/@@/yui/current/yuiloader/yuiloader-beta-min.js");
head.addScript("/@@/yui/current/dom/dom-min.js");
head.addScript("/@@/yui/current/json/json-min.js");

var colspan = 4;
core.admin.pieces.logHeader({colspan : colspan});
core.admin.pieces.logFooter({colspan : colspan});

%>

<div id="debug"></div>

<script>

var pause = false;
var mostRecent = null;
var all = [];

function togglePause() {
    pause = !pause;
    if(!pause)
        updateLog();
}

function debug( s ){
  var e = document.getElementById( "debug" );
  if ( ! e ) return;
  e.innerHTML = s + "<BR>" + e.innerHTML;
}

function updateLog(){
   if(!pause) {
      var url = "/admin/_logScroll?";
      if ( mostRecent ) url += "since=" + mostRecent.getTime();
      loadDocAsync( url+getPassOpts() , updateLogHandler );
   }
}

function updateLogHandler( raw ){
    document.getElementById("temp").innerHTML = raw;
    // For some reason, the jxp is returning 100 text nodes and 100 trs, so we filter out the text nodes
    var trs = YAHOO.util.Dom.getChildrenBy(document.getElementById("temp").childNodes[1], function(n) {
        if(n.className == "white-main")
            return true;
        return false;
    });
    rows += trs.length;
    var mr = new Date(trs[0].childNodes[3].innerHTML);

    for(var i=trs.length-1; i>=0; i--) {
        YAHOO.util.Dom.insertAfter(trs[i], pushNode);
    }

    if ( !mostRecent || mostRecent < mr ) {
       mostRecent = mr;
    }

    while(rows > 100) {
        var toBeRemoved = YAHOO.util.Dom.getPreviousSibling(popNode);
        var parent = toBeRemoved.parentNode;
        parent.removeChild(toBeRemoved);
        rows--;
    }

    setTimeout( updateLog , 1000 );
}
var myDiv = document.createElement("table");
myDiv.setAttribute("id", "temp");
myDiv.setAttribute("style", "display:none;");
document.getElementById("debug").appendChild(myDiv);

var rows = 0;
var pushNode = document.getElementById( "pushNode" );
var popNode = document.getElementById( "popNode" );


updateLog();

var ns = 'all';
var log_level = 'ALL';
var filterStr = '';

function filterResults(id) {
    var val = document.getElementById(id).value;

    if(id == "filter") {
        filterStr = val;
    }
    if(id == "log_level") {
        log_level = val;
    }
    if(id == "logger") {
        ns = val;
    }
    ajax("action=filter"+getPassOpts(), "_logScroll", function(res) {
       all = [];
       updateLogHandler(res);
    });
}

function getPassOpts() {
    passData = "";
    if(ns != "all")
        passData += "&ns="+ns;
    if(log_level != "ALL")
        passData += "&log_level="+log_level;
    if(filterStr != "")
        passData += "&filter="+filterStr;
    return passData;
}

function refreshFilter() {
    ns = "all";
    log_level = "ALL";
    filterStr = "";

    pause = false;
    mostRecent = null;
    updateLog();
}

</script>
