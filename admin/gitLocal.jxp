<%
core.git.repo();
core.ext.pluck();
core.content.html();

head.addScript("/~~/admin/assets/gitPopup.js");

var g = new git.Repo(); 

var revid = g.getCurrentRev().parsed.rev;
var revmsg = g.getCommit(revid).parsed.message;
revmsg = revmsg.substring(0, revmsg.indexOf('\n'));

core.admin.pieces.githeader({revid: revid, revmsg: revmsg,
                            });

var output_command = function(foo){
    log(tojson(foo));
    print(content.HTML.escape(foo.cmd) + "<br>");
    print("<pre>" + content.HTML.escape(foo.out) + "\n---\n" +
          content.HTML.escape(foo.err) + "</pre>");
    print("<hr>");
};

if ( request.action == "pull" ){
    print( "pulling...<br>" );
    var foo = g.pull();
    output_command(foo);
}
else if ( request.action == "push" ){
    print( "pushing...<br>" );
    var foo = g.push();
    output_command(foo);
}
else if ( request.action == "add" && request.file ){
    print( "Adding...<br>" );
    var foo = g.add(request.getParameters('file'));
    output_command(foo);
}
else if ( request.action == "diff" && request.file ){
    print( "Diffinf...<br>" );
    var foo = g.diff(request.getParameters('file'), {rev: "HEAD"});
    output_command(foo);
}
else if ( request.action == "commit" && request.file ){
    if ( ! request.msg )
	print( "need a message!" );
    else {
	print( "Commit...<br>" );
        
	var foo = g.commit( request.getParameters('file') , request.msg , user );
        output_command(foo);
    }
}
else if ( request.action == "checkout" && request.file ){
    print("Performing checkout...<br>");
    var foo = g.checkout(request.getParameters("file"));
    output_command(foo);
}

var parsed = g.status().parsed;

var conflicts = false;
var unmerged = {};
if(parsed.unmerged){
    parsed.unmerged.forEach(function(z){ unmerged[z.name] = true; });
    delete parsed.unmerged;
    conflicts = true;
}

var buttons = {"changed": ['diff', {name: 'checkout', disabled: conflicts}, 'commit'], 'untracked': ['add']};

var diffLinks = {"changed": true, 'untracked': false};

var extra = {'changed': 'Commit Message <input name="msg" value="">'};

var checked = {};
if(request.file)
    request.getParameters('file').forEach(function(z){
        checked[z] = "checked";
    });

if(parsed.staged){
    parsed.changed = (parsed.changed || []).concat(parsed.staged);
    delete parsed.staged;
}

%>
<form>
<input type="submit" name="action" value="pull" <%= conflicts ? "disabled" : "" %> >
<input type="submit" name="action" value="push"  <%= conflicts ? "disabled" : "" %> >
</form>
<%
for ( type in parsed ){ 
    core.admin.pieces.gitfilelist({title: type, actions: buttons[type],
                                   extra: extra[type], checked: checked,
                                   unmerged: unmerged,
                                   filenames: parsed[type].map(Ext.pluck('name')),
                                   filetypes: parsed[type].map(Ext.pluck('type')),
                                   fileDiff: diffLinks[type] });
}
%>
<hr>

