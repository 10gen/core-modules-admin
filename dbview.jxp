<% /**
*      Copyright (C) 2008 10gen Inc.
*  
*    Licensed under the Apache License, Version 2.0 (the "License");
*    you may not use this file except in compliance with the License.
*    You may obtain a copy of the License at
*  
*       http://www.apache.org/licenses/LICENSE-2.0
*  
*    Unless required by applicable law or agreed to in writing, software
*    distributed under the License is distributed on an "AS IS" BASIS,
*    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*    See the License for the specific language governing permissions and
*    limitations under the License.
*/ %>

<%
/* dbview.jxp - database content viewer utility */
head.addCSS("NOCDN/admin/assets/admin.css");
head.addScript("NOCDN/admin/assets/interpreter.js");
head.push('<script type="text/javascript" src="/@@/yui/current/yuiloader/yuiloader-min.js" ></script>');
core.content.html();

// top == show all collections
var top = request.ns == null;
var collection;
if( top ) collection = db["system.namespaces"];
else collection = db[request.ns.substring( request.ns.indexOf('.')+1 )]; // remove db name from the str

var appName = request.getHost();
appName = (appName.indexOf(".") == -1) ? appName : appName.substring(0, appName.indexOf("."));

var hdr = top ? "All collections for " + appName + " application" : "Collection: " + request.ns;
if( top ) {
    // we'll sort by collection name
    collection.ensureIndex( {name:true} );
}

// ignore internal transient variables
var ignore= { _ns:1, _save:1, _update:1 };

var rows, max;
rows = collection.find().limit(10).sort( { name : 1 } ).toArray();
    max = rows.length+1;


// Find all fields of all rows
var fields = [];
var f = {};
for( var i=0; i < rows.length; i++ ) {
    for( var e in rows[i] ) {
        if( !f[e] ) f[e] = 1;
    }
}
for( var i in f) {
    fields.push(i);
}

/* find the indices */
if(!top) {
    var introMsg = "Collection Detail provides the user with a means to edit collection detail records, view collection sizing and statistics information, add/drop collection indexes, and query/filter the collection data.";

    %>
    <p><a href="dbview?currentPage=<%= request.refPage ? request.refPage : 1 %>">Collection View</a>&nbsp;&gt;&nbsp;Collection: <%= request.ns %></p>
    <%
    var r = new RegExp(request.ns+".*");
    var metarows = db["system.namespaces"].find({name: r}).limit(200).toArray();

    var i=0;
    var idxes = [];
    var idxid = [];
    while(i<metarows.length) {
        obj = metarows[i];
        if(metarows[i].name.indexOf("$") > 0) {
            var idx = obj.name.substring(obj.name.indexOf("$")+1);
            idxid.push(idx);
            var idxList = [];
            while(idx.indexOf("_") >= 0) {
                idxList.push(idx.substring(0, idx.indexOf("_")));
                idx = idx.substring(idx.indexOf("_")+3);
            }
            if(idxList.length > 1)
                idxes.push("Compound index on "+idxList.join(","));
            else
                idxes.push("Index on "+idxList[0]);
        }
        i++;
    }
}
%>


<script type="text/javascript">
var lastSearch = "";

<% if(!top) { %>
function doCommand(cmd) {
    ajax("ns=<%= request.ns %>&action=eval&cmd="+cmd, "table", function(response) {
        if(response.trim() != "")
            document.getElementById("myCollection").innerHTML = response;
    });
}
<% } %>

function infoDlg(hd, msg) {
    var simpledialog1 = new YAHOO.widget.SimpleDialog("dropTableDlg",
        { width: "300px",
        fixedcenter: true,
        draggable: true,
        visible: false,
        close: true,
        text: msg,
        buttons: [ { text:"OK", handler:handleNo, isDefault:true } ]
        } );
    simpledialog1.setHeader(hd);
    simpledialog1.render("myMarkedUpContainer");
    simpledialog1.show();
}

var currentSort = { col : '<%= top ? 'name' : ((fields.indexOf('_id') != -1) ? '_id' : fields[0]) %>', dir: 1 };
function sortBy(col) {
    if(currentSort.col == col)
        currentSort.dir = -1 * currentSort.dir;
    else
        currentSort.dir = 1;
    currentSort.col = col;

    refreshTable();
}

function showObj(i) {
    document.getElementById(i).style.display = "block";
}

function hideObj(i) {
    document.getElementById(i).style.display = "none";
}

function deleteRow(id, field) {
    var tr = document.getElementById( "tr"+id );
    var handleDeleteRow = function() {
        if(field)
            var passData = "ns=<%= request.ns %>&action=delete&name="+field+"&val="+id;
        else
            var passData = "ns=<%= request.ns %>&action=delete&id="+id;
        ajax(passData, "editDb", function(response) {
            refreshTable();
        });
        this.hide();
    }
    var handleNoDeleteRow = function() {
        tr.className = "white-main";
        this.hide();
    }


    tr.className = "highlight-row";
    var simpledialog1 = new YAHOO.widget.SimpleDialog("dropTableDlg",
        { width: "300px",
        fixedcenter: true,
        draggable: true,
        visible: false,
        close: true,
        icon: YAHOO.widget.SimpleDialog.ICON_WARN,
        text: "Are you sure you want to delete this row?",
        buttons: [ { text:"Yes", handler:handleDeleteRow },
        { text:"No", handler:handleNoDeleteRow, isDefault:true } ]
        } );
    simpledialog1.setHeader("Delete Row");
    simpledialog1.render("myMarkedUpContainer");
    simpledialog1.show();
}

function toggleVisible(i) {
     var elem = document.getElementById("div"+i);
     if(elem.style.display == "block")
         elem.style.display = "none";
     else
         elem.style.display = "block";
}

function printDiv(val, type, i, bd, id, path) {
    if(i == "_id") return;

    var fieldDiv = document.createElement("div");
    fieldDiv.setAttribute("class", "elem");
    fieldDiv.setAttribute("id", "div"+(++fcount))
    fieldDiv.innerHTML = '<label class="obj">'+i+': </label>';
    if(val[i] != null && typeof val[i] == "object") {
        fieldDiv.innerHTML += '<span onclick="toggleVisible('+(fcount+1)+')" style="cursor: default">(click to toggle object view)</span><input type="button" value="x" onclick="deleteProp('+fcount+', ['+path+'])"><br />';

        var outerDiv = document.createElement("div");
        outerDiv.setAttribute("class", "obj");
        outerDiv.setAttribute("id", "div"+(++fcount));
        outerDiv.setAttribute("style", "display:block;");

        var subobj = val[i];
        for(var j in subobj) {
            path.push("'"+j+"'");
            printDiv(val[i], type[i], j, outerDiv, id, path);
            path.pop();
        }
        fieldDiv.appendChild(outerDiv);
    }
    else if(type[i] == "boolean") {
        var check = val[i] == "true" ? "checked" : "";
        fieldDiv.innerHTML += '<input type="checkbox" id="f'+fcount+'" value="'+val[i]+'" onchange="saveValue(\'boolean\',\''+fcount+'\',['+path+'])" '+check+'><input type="button" value="x" onclick="deleteProp('+fcount+', ['+path+'])" />';
        fcount++;
    }
    else {
        if(type[i] == "string" && val[i].length >= 20)
            fieldDiv.innerHTML += '<textarea id="f'+fcount+'" onchange="saveValue(\''+type[i]+'\',\''+fcount+'\',['+path+'])">'+val[i]+'</textarea><input type="button" value="x" onclick="deleteProp('+fcount+', ['+path+'])" />';
        else
            fieldDiv.innerHTML += '<input type="text" id="f'+fcount+'" value="'+val[i]+'" onchange="saveValue(\''+type[i]+'\',\''+fcount+'\',['+path+'])"><input type="button" value="x" onclick="deleteProp('+fcount+', ['+path+'])" />';
        fcount++;
    }
    bd.appendChild(fieldDiv);
}

var currentSearch = {};

/* should we support multiple searches on one key? */
function addToSearch() {
    var sel = document.getElementById("searchopt");
    var key = sel.value;
    var val = document.getElementById("searchtext").value;
    currentSearch[key] = val;

    // reset search fields
    sel.options[0].selected = true;
    document.getElementById("searchtext").value = "";

    // update searchbox
    var terms = [];
    for(var i in currentSearch) {
        terms.push( i+": "+currentSearch[i] );
    }
    document.getElementById("searchbox").value = "<%= (request.ns) ? 'db.'+request.ns.substring(request.ns.indexOf('.')+1) : 'db[system.namespaces]' %>.find({ " + terms.join(",") + " });";
}

<% if(!top) { %>

function setSearchFilter() {
    var cmd = "db.<%= request.ns.substring( request.ns.indexOf('.')+1 ) %>.find({ ";
    var cmdAr = [];
    var terms = document.getElementsByName("search");
    for(var t in terms) {
        if(terms[t].value && terms[t].value.trim() != "") {
            cmdAr.push(terms[t].id +": "+terms[t].value);
        }
    }
    document.getElementById("searchbox").value = cmd+cmdAr.join(", ")+"});";
}


function changeSearchbox() {
    newIndex = "db.<%= request.ns.substring( request.ns.indexOf('.')+1 ) %>.ensureIndex({";
    eiAr = [];

    var newidx = document.getElementsByName("createidx");
    for(var i=0; i<newidx.length; i++) {
        if(newidx[i].checked)
            newIndex += newidx[i].value + ": 1, ";
    }
    newIndex = newIndex.substring(0, newIndex.length-2) + " });";
}


var newIndex = "";
function createIndex() {
    var idx = '<%
    var sysIdx = db.system.indexes.find({ns: request.ns}).toArray();
    var existing = [];
    for(var i in sysIdx) {
        for(var j in sysIdx[i].key) {
            existing.push(j);
        }
    }

    for(var i in f) {
        if(!ignore[i]) {
            if(existing.indexOf(i) >= 0)
                print('<div class="existing_index">'+i+' <span>(index exists)</span></div>');
            else
                print('<div><input type="checkbox" onclick="changeSearchbox()" name="createidx" value="'+i+'" /> '+i+'</div>');
        }
    } %>';

    var _createIndex = function() {
        doCommand(newIndex);
        refreshTable();
        this.hide();
    }

    var simpledialog1 = new YAHOO.widget.SimpleDialog("simpledialog1",
        { width: "300px",
          fixedcenter: true,
          draggable: true,
          visible: false,
          close: true,
          text: "Select fields for the new index: "+idx,
        buttons: [ { text:"Create", handler: _createIndex }, { text:"Cancel", handler:handleNo, isDefault:true } ]
        } );
    simpledialog1.setHeader("Ensure Index");
    simpledialog1.render("myMarkedUpContainer");
    simpledialog1.bringToTop();
    simpledialog1.show();

}

function refreshSearch() {
    lastSearch = "";
    refreshTable();
}

<% } // end of if(!top) %>

var searchFilterPanel;

</script>

<div id="myMarkedUpContainer" class="yui-skin-sam">
</div>

<!--CSS file (default YUI Sam Skin) -->
<link type="text/css" rel="stylesheet" href="/@@/yui/current/datatable/assets/skins/sam/datatable.css">
<link type="text/css" rel="stylesheet" href="/@@/yui/current/logger/assets/skins/sam/logger.css">
<link rel="stylesheet" type="text/css" href="/@@/yui/current/button/assets/skins/sam/button.css" />
<link rel="stylesheet" type="text/css" href="/@@/yui/current/container/assets/skins/sam/container.css" />


<!-- Dependencies -->
<script type="text/javascript" src="/@@/yui/current/yahoo-dom-event/yahoo-dom-event.js"></script>
<script type="text/javascript" src="/@@/yui/current/element/element-beta-min.js"></script>
<script type="text/javascript" src="/@@/yui/current/button/button-min.js"></script>
<script type="text/javascript" src="/@@/yui/current/datasource/datasource-beta-debug.js"></script>

<!-- OPTIONAL: JSON Utility -->
<script type="text/javascript" src="/@@/yui/current/json/json-min.js"></script>

<!-- OPTIONAL: Drag Drop (enables resizeable or reorderable columns) -->
<script type="text/javascript" src="/@@/yui/current/dragdrop/dragdrop-min.js"></script>

<!-- Source files -->
<script type="text/javascript" src="/@@/yui/current/datatable/datatable-beta-debug.js"></script>
<script type="text/javascript" src="/@@/yui/current/logger/logger-debug.js"></script>
<script type="text/javascript" src="/@@/yui/current/container/container-min.js"></script>
<script type="text/javascript" src="/@@/yui/current/utilities/utilities.js"></script>

<script type="text/javascript">

var fcount = <%= fcount+1 %>;


<%
if(top) {
    var cols = [ "name", "index", "capped" ];
}
%>

function doSearch() {
    var passData = getSearchArgs();
    lastSearch = passData;
    refreshTable();
}
function clearSearch() {
    document.getElementById("searchtext").value = "";
    if (document.getElementById("searchopt").options[0])
        document.getElementById("searchopt").options[0].selected = true;
    currentSearch = {};
    currentSort = { col : '<%= top ? 'name' : ((fields.indexOf('_id') != -1) ? '_id' : fields[0]) %>', dir: 1 };
    lastSearch = "";
    refreshTable();
}

var handleNo = function() {
    this.hide();
}

var currentPage = 1;
function loadPage(pagenum) {
    currentPage = pagenum;
    refreshTable();
}

<%
if(top) {
    %>

    var handleDrop = function() {
        ajax("action=drop&ns="+tablename, "editDb", function(x) {
            refreshTable();
        });
        this.hide();
    }

    function getValidation(tablename) {
        ajax("action=validation&ns="+tablename, "table", function(response) {
            var simpledialog1 = new YAHOO.widget.SimpleDialog("simpledialog1",
                { width: "300px",
                fixedcenter: true,
                draggable: true,
                visible: false,
                close: true,
                icon: YAHOO.widget.SimpleDialog.ICON_INFO,
                text: response,
                buttons: [ { text:"OK", handler:handleNo, isDefault:true } ]
                } );
            simpledialog1.setHeader("Validation");
            simpledialog1.render("myMarkedUpContainer");
            simpledialog1.show();
        });
    }

    function dropTable(tname) {
        tablename = tname;
        var simpledialog1 = new YAHOO.widget.SimpleDialog("dropTableDlg",
            { width: "300px",
            fixedcenter: true,
            draggable: true,
            visible: false,
            close: true,
            icon: YAHOO.widget.SimpleDialog.ICON_WARN,
            text: "Are you sure you want to drop the collection "+tname+"?",
            buttons: [ { text:"Yes", handler:handleDrop },
            { text:"No", handler:handleNo, isDefault:true } ]
            } );
        simpledialog1.setHeader("Drop Collection");
        simpledialog1.render("myMarkedUpContainer");
        simpledialog1.show();
    }

    <%
}
%>

var tablename = "";

function getSelectedIndices(separator) {
    var idxes = document.getElementsByName(tablename);
    var list = [];
    for(var i=0; i<idxes.length; i++) {
        if (idxes[i].checked)
            list.push( idxes[i].value );
    }
    return list.join(separator);
}


function dropIndex(id) {
    var handleIDrop = function() {
        ajax("action=dropI&ns=<%= request.ns %>&idx="+id, "editDb", refreshTable);
        document.getElementById("li"+id).style.display = "none";
        this.hide();
    }
    var simpledialog1 = new YAHOO.widget.SimpleDialog("dropTableDlg",
        { width: "300px",
        fixedcenter: true,
        draggable: true,
        visible: false,
        close: true,
        icon: YAHOO.widget.SimpleDialog.ICON_WARN,
        text: "Are you sure you want to drop the index "+id+" from <%= request.ns %>?",
        buttons: [ { text:"Yes", handler:handleIDrop },
        { text:"No", handler:handleNo, isDefault:true } ]
        } );
    simpledialog1.setHeader("Drop Index");
    simpledialog1.render("myMarkedUpContainer");
    simpledialog1.show();
}


function refreshTable(passData){
    if(passData)
        passData = passData+"&";
    else
        passData = "";
    ajax("<%= request.ns ? 'ns='+request.ns+'&' : '' %>action=search&currentPage="+currentPage+"&sortcol="+currentSort.col+"&sortdir="+currentSort.dir+"&"+passData+lastSearch, "table", function(response) {
        document.getElementById("myCollection").innerHTML = response;

        var column = document.getElementById("thlink"+currentSort.col);
        // sometimes there are no sortable columns
        if(column)
            column.className = (currentSort.dir == 1) ? "sort-up" : "sort-down";
    });
}


function getSearchArgs() {
    return document.getElementById("searchopt").value + "=" + document.getElementById("searchtext").value;
}

<%
if(!top) {
    %>
    searchFilterPanel = new YAHOO.widget.Panel("searchFilter", {visible: false, contraintoviewport: true, fixedcenter: true });
    searchFilterPanel.render("myMarkedUpContainer");
    document.getElementById("searchFilter").style.display = "block";
    <%
}
%>

</script>

<%
if(top)
    var introMsg = "";

if(top) {
   var searchopts = [ {name : "NAME", className: "sort-down"}, {name : "INDICES" }, {name : "CAPPED", className: "center"} ];
}
else {
    var searchopts = [];
    searchopts.push({"name" : "_id", className: "sort-up" });
    for(var i in f) {
        if(ignore[i] || i == "_id") continue;
        searchopts.push({"name" : i, className: "" });
    }
}
adminRoot.pieces.dbview({ hdr : hdr,
                           introMsg: introMsg,
                           idxes : idxes,
                           idxid : idxid });

%>
<div id="myCollection">
<%
adminRoot.table();
%>
</div>


<script type="text/javascript" src="/admin/assets/objPopup.js"></script>
