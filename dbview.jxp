<%
/* dbview.jxp - database content viewer utility */
head.addCSS("NOCDN/~~/admin/assets/jason.css");
head.addScript("NOCDN/~~/admin/assets/interpreter.js");
head.push('<script type="text/javascript" src="/@@/yui/current/yuiloader/yuiloader-beta-min.js" ></script>');
core.content.html();

// top == show all collections
var top = request.ns == null;
var collection;
if( top ) collection = db["system.namespaces"];
else collection = db[request.ns.substring( request.ns.indexOf('.')+1 )]; // remove db name from the str

var appName = request.getHost();
appName = (appName.indexOf(".") == -1) ? appName : appName.substring(0, appName.indexOf("."));

var hdr = top ? "All collections for " + appName + " application" : "Collection: " + request.ns;
if( top ) {
    // we'll sort by collection name
    collection.ensureIndex( {name:true} );
}

// ignore internal transient variables
var ignore= { _ns:1, _save:1, _update:1 };

var rows, max;
rows = collection.find().limit(10).sort( { name : 1 } ).toArray();
    max = rows.length+1;


// Find all fields of all rows
var fields = [];
var f = {};
for( var i=0; i < rows.length; i++ ) {
    for( var e in rows[i] ) {
        if( !f[e] ) f[e] = 1;
    }
}
for( var i in f) {
    fields.push(i);
}

/* find the indices */
if(!top) {
    var x = validate(request.ns.substring( request.ns.indexOf('.')+1 ));
    var introMsg = "Collection Detail provides the user with a means to edit collection detail records, view collection sizing and statistics information, add/drop collection indexes, and query/filter the collection data.";
    var validation = x.result;

    %>
    <a href="dbview?currentPage=<%= request.refPage %>" style="display: block;">Back to Collection View</a>
    <%
    var r = new RegExp(request.ns+".*");
    var metarows = db["system.namespaces"].find({name: r}).toArray();

    var i=0;
    var idxes = [];
    var idxid = [];
    while(i<metarows.length) {
        obj = metarows[i];
        if(metarows[i].name.indexOf("$") > 0) {
            var idx = obj.name.substring(obj.name.indexOf("$")+1);
            idxid.push(idx);
            var idxList = [];
            while(idx.indexOf("_") >= 0) {
                idxList.push(idx.substring(0, idx.indexOf("_")));
                idx = idx.substring(idx.indexOf("_")+3);
            }
            if(idxList.length > 1)
                idxes.push("Compound index on "+idxList.join(","));
            else
                idxes.push("Index on "+idxList[0]);
        }
        i++;
    }
    %>
    </script>
<!--    <div>

    <div>
    <input type="button" value="View Options" onclick="viewOptionsPanel.show()" />
    </div>
    <div id="viewOptions" style="display: none">
    <div class="hd">View Options</div>
    <div class="bd">Select the columns that you wish to display.
    <% for(var i in f) {
        if(!ignore[i])
            print('<div>'+i+' <input type="checkbox" name="viewopts" value="'+i+'" checked onclick="toggleCollapse(\''+i+'\')"/></div>');
    }%>
    </div>
    <div class="ft">
    <input type="button" value="Okay" onclick="changeView()" /><input type="button" value="Cancel" onclick="viewOptionsPanel.hide()" />
    </div>
    </div>
-->

    <div id="searchFilter" style="display:none;">
    <div class="hd">Search/Filter Panel</div>
    <div class="bd"><table><tr><th>Column</th><!--<th>Yes</th><th>No</th><th>Whatever</th>--><th>Search Term</th></tr>
    <%
    for(var i in f) {
        if(!ignore[i])
            print('<tr><td>'+i+'</td><!--<td><input type="radio" name="'+i+'" value="0" /></td><td><input type="radio" name="'+i+'" value="1" /></td><td><input type="radio" name="'+i+'" value="2" /></td>--><td><input type="text" onblur="setSearchFilter()" name="search" id="'+i+'" /></td></tr>');
    }
    %>
    </table>
    </div>
    <div class="ft"><input type="button" value="OK" onclick="doCommand(); searchFilterPanel.hide()" /><input type="button" value="Cancel" onclick="searchFilterPanel.hide()" /></div>
    </div>
    <%
} %>


<script type="text/javascript">
var lastSearch = "";

<% if(!top) { %>
function doCommand() {
    ajax("ns=<%= request.ns %>&action=eval&cmd="+document.getElementById("searchbox").value, "table", function(response) {
        document.getElementById("myCollection").innerHTML = response;
    });
}
<% } %>

function infoDlg(hd, msg) {
    var simpledialog1 = new YAHOO.widget.SimpleDialog("dropTableDlg",
        { width: "300px",
        fixedcenter: true,
        draggable: true,
        visible: false,
        close: true,
        text: msg,
        buttons: [ { text:"OK", handler:handleNo, isDefault:true } ]
        } );
    simpledialog1.setHeader(hd);
    simpledialog1.render("myMarkedUpContainer");
    simpledialog1.show();
}

function validateSearchbox() {
    /* external function checkRun matches parens */
    if(checkRun(document.getElementById("searchbox").value))
        infoDlg("Syntax Validation", "Syntax ok.");
    else
        infoDlg("Syntax Validation", "Syntax Error.");
}

function changeView() {
    var elems = document.getElementsByName("viewopts");
    for(var i=0; i<elems.length; i++) {
        if(!elems[i].checked)
            myDataTable.hideColumn(myDataTable.getColumn(i));
        else
            myDataTable.showColumn(myDataTable.getColumn(i));
    }
    viewOptionsPanel.hide();
}

var currentSort = { col : '<%= top ? 'name' : ((fields.indexOf('_id') != -1) ? '_id' : fields[0]) %>', dir: 1 };
function sortBy(col) {
    if(currentSort.col == col)
        currentSort.dir = -1 * currentSort.dir;
    else
        currentSort.dir = 1;
    currentSort.col = col;

    refreshTable();
}

function showObj(i) {
    document.getElementById(i).style.display = "block";
}

function hideObj(i) {
    document.getElementById(i).style.display = "none";
}

function deleteRow(id) {
    var handleDeleteRow = function() {
        var passData = "ns=<%= request.ns %>&action=delete&id="+id;
        ajax(passData, "editDb", function(response) {
            refreshTable();
        });
        this.hide();
    }

    var simpledialog1 = new YAHOO.widget.SimpleDialog("dropTableDlg",
        { width: "300px",
        fixedcenter: true,
        draggable: true,
        visible: false,
        close: true,
        icon: YAHOO.widget.SimpleDialog.ICON_WARN,
        text: "Are you sure you want to delete this row?",
        buttons: [ { text:"Yes", handler:handleDeleteRow },
        { text:"No", handler:handleNo, isDefault:true } ]
        } );
    simpledialog1.setHeader("Delete Row");
    simpledialog1.render("myMarkedUpContainer");
    simpledialog1.show();
}

function toggleVisible(i) {
     var elem = document.getElementById("div"+i);
     if(elem.style.display == "block")
         elem.style.display = "none";
     else
         elem.style.display = "block";
}

function printDiv(val, type, i, bd, id, path) {
    if(i == "_id") return;

    var fieldDiv = document.createElement("div");
    fieldDiv.setAttribute("class", "elem");
    fieldDiv.setAttribute("id", "div"+(++fcount))
    fieldDiv.innerHTML = '<label class="obj">'+i+': </label>';
    if(val[i] != null && typeof val[i] == "object") {
        fieldDiv.innerHTML += '<span onclick="toggleVisible('+(fcount+1)+')" style="cursor: default">(click to toggle object view)</span><input type="button" value="x" onclick="deleteProp('+fcount+', ['+path+'])"><br />';

        var outerDiv = document.createElement("div");
        outerDiv.setAttribute("class", "obj");
        outerDiv.setAttribute("id", "div"+(++fcount));
        outerDiv.setAttribute("style", "display:block;");

        var subobj = val[i];
        for(var j in subobj) {
            path.push("'"+j+"'");
            printDiv(val[i], type[i], j, outerDiv, id, path);
            path.pop();
        }
        fieldDiv.appendChild(outerDiv);
    }
    else if(type[i] == "boolean") {
        var check = val[i] == "true" ? "checked" : "";
        fieldDiv.innerHTML += '<input type="checkbox" id="f'+fcount+'" value="'+val[i]+'" onchange="saveValue(\'boolean\',\''+fcount+'\',['+path+'])" '+check+'><input type="button" value="x" onclick="deleteProp('+fcount+', ['+path+'])" />';
        fcount++;
    }
    else {
        if(type[i] == "string" && val[i].length >= 20)
            fieldDiv.innerHTML += '<textarea id="f'+fcount+'" onchange="saveValue(\''+type[i]+'\',\''+fcount+'\',['+path+'])">'+val[i]+'</textarea><input type="button" value="x" onclick="deleteProp('+fcount+', ['+path+'])" />';
        else
            fieldDiv.innerHTML += '<input type="text" id="f'+fcount+'" value="'+val[i]+'" onchange="saveValue(\''+type[i]+'\',\''+fcount+'\',['+path+'])"><input type="button" value="x" onclick="deleteProp('+fcount+', ['+path+'])" />';
        fcount++;
    }
    bd.appendChild(fieldDiv);
}

var currentSearch = {};

/* should we support multiple searches on one key? */
function addToSearch() {
    var sel = document.getElementById("searchopt");
    var key = sel.value;
    var val = document.getElementById("searchtext").value;
    currentSearch[key] = val;

    // reset search fields
    sel.options[0].selected = true;
    document.getElementById("searchtext").value = "";

    // update searchbox
    var terms = [];
    for(var i in currentSearch) {
        terms.push( i+": "+currentSearch[i] );
    }
    document.getElementById("searchbox").value = "<%= (request.ns) ? 'db.'+request.ns.substring(request.ns.indexOf('.')+1) : 'db[system.namespaces]' %>.find({ " + terms.join(",") + " });";
}

<% if(!top) { %>
// alright, so what really should be done is checkboxes, but this will work for now
function deleteProp(num, path) {
    var deleteThis = function() {
        var tempObj = currentObj;
        for(var i=0; i<path.length-1; i++) {
            tempObj = tempObj[path[i]];
        }
        delete tempObj[path[path.length-1]];
        document.getElementById("div"+num).style.display = "none";
        this.hide();
//      refreshTable();
    }

    var simpledialog1 = new YAHOO.widget.SimpleDialog("simpledialog1",
        { width: "300px",
          fixedcenter: true,
          draggable: true,
          visible: false,
          close: true,
          icon: YAHOO.widget.SimpleDialog.ICON_WARN,
          text: "Are you sure you want to delete this field?",
          buttons: [ { text:"Yes", handler:deleteThis }, { text:"No", handler:handleNo, isDefault:true } ]
        } );
    simpledialog1.setHeader("Delete Field");
    simpledialog1.render("myMarkedUpContainer");
    simpledialog1.bringToTop();
    simpledialog1.show();
}


function setSearchFilter() {
    var cmd = "db.<%= request.ns.substring( request.ns.indexOf('.')+1 ) %>.find({ ";
    var cmdAr = [];
    var terms = document.getElementsByName("search");
    for(var t in terms) {
        if(terms[t].value && terms[t].value.trim() != "") {
            cmdAr.push(terms[t].id +": "+terms[t].value);
        }
    }
    document.getElementById("searchbox").value = cmd+cmdAr.join(", ")+"});";
}


function changeSearchbox() {
    newEI = "db.<%= request.ns.substring( request.ns.indexOf('.')+1 ) %>.ensureIndex({";
    eiAr = [];

    var newidx = document.getElementsByName("createidx");
    for(var i=0; i<newidx.length; i++) {
        if(newidx[i].checked)
            newEI += newidx[i].value + ": 1, ";
    }
    newEI = newEI.substring(0, newEI.length-2) + " });";

    var sb = document.getElementById("searchbox");
    sb.value = newEI;
}

var _createIndex = function() {
    doCommand();
    this.hide();
}

function createIndex() {
    var idx = '<%
    for(var i in f) {
        if(!ignore[i])
            print('<div><input type="checkbox" onclick="changeSearchbox()" name="createidx" value="'+i+'" /> '+i+'</div>');
    } %>';

    var simpledialog1 = new YAHOO.widget.SimpleDialog("simpledialog1",
        { width: "300px",
          fixedcenter: true,
          draggable: true,
          visible: false,
          close: true,
          text: "Select fields for the new index: "+idx,
        buttons: [ { text:"Create", handler: _createIndex }, { text:"No", handler:handleNo, isDefault:true } ]
        } );
    simpledialog1.setHeader("Ensure Index");
    simpledialog1.render("myMarkedUpContainer");
    simpledialog1.bringToTop();
    simpledialog1.show();

}


// currentObj stores edits to the fields
var currentObj = {};

function editRow(id) {
    ajax("ns=<%= request.ns %>&id="+id, "showTable", function(response) {
        // get bd div
        var bd = document.getElementById("editRecord");
        bd = YAHOO.util.Dom.getChildrenBy(bd, function(node) {
            return node.id == "bd" ? true : false;
        });
        bd = bd[0];

        bd.innerHTML = "";
        var obj = YAHOO.lang.JSON.parse(response);
        currentObj = obj.val;
        // for each field, display the relevant input type
        for(var i in obj.val)
            printDiv(obj.val, obj.type, i, bd, id, ["'"+i+"'"]);

        editRowPanel.bringToTop();
        editRowPanel.show();
    });
}

function saveValue(type, fcount, path) {
    var val;
    if(type == "boolean") {
        val = document.getElementById("f"+fcount).checked;
    }
    else if(type == "number") {
        val = parseInt(document.getElementById("f"+fcount).value);
    }
    else if(type == "Date") {
        val = new Date('"'+document.getElementById("f"+fcount).value+'"');
    }
    else { // string
        val = document.getElementById("f"+fcount).value;
    }

    var tempObj = currentObj;
    for(var i=0; i<path.length-1; i++) {
        tempObj = tempObj[path[i]];
    }
    tempObj[path[path.length-1]] = val;
}

// save an edited value
function saveRow() {
    // check for added fields
    if(document.getElementById("newFieldDiv")) {
        var min = parseInt(document.getElementById("newFieldDiv").className);

        for(var i=min+1; i<fcount; i++) {
            var label = document.getElementById("label"+i).value;
            if(label.trim() == "") continue;

            var val = document.getElementById("f"+i);
            if(val.className == "boolean")
                currentObj[label] = val.checked;
            else if(val.className == "number")
                currentObj[label] = parseInt(val.value);
            else if(val.className == "date")
                currentObj[label] = new Date('"'+val.value+'"');
            else
                currentObj[label] = val.value;
        }
    }
    ajax("ns=<%= request.ns %>&action=save_row&val="+YAHOO.lang.JSON.stringify(currentObj), "editRow", function(response) {
        refreshTable();
    });
    editRowPanel.hide();
}

function refreshSearch() {
    lastSearch = "";
    refreshTable();
}

// Save a new value
function saveRecord(elem) {
    var bd = document.getElementById(elem);
    var children = YAHOO.util.Dom.getChildren(bd);
    var newObj = {};

    var getVal = function(val) {
        if(val.className == "boolean")
            return val.checked;
        if(val.className == "number")
            return parseInt(val.value);
        if(val.className == "string")
            return val.value;
        if(val.className == "date")
            return new Date(val);
        if(val.className == "object")
            return null;
    }

    for(var i in children) {
        if(children[i].style.display == "none") continue;

        if(children[i].id == "newFieldDiv") {
            var newFields = YAHOO.util.Dom.getChildren(children[i]);
            for(var i in newFields) {
                var label = YAHOO.util.Dom.getFirstChild(newFields[i]);
                var labelVal = YAHOO.util.Dom.getFirstChild(YAHOO.util.Dom.getFirstChild(label)).value;
                if(YAHOO.util.Dom.getFirstChild(YAHOO.util.Dom.getFirstChild(label)).value.trim() == "") continue;
                var val = YAHOO.util.Dom.getNextSibling(label);
                newObj[labelVal] = getVal(val);
            }
            continue;
        }

        var label = YAHOO.util.Dom.getFirstChild(children[i]);
        var val = YAHOO.util.Dom.getNextSibling(label);
        newObj[label.innerHTML.substring(0, label.innerHTML.length-2)] = getVal(val);
    }
    ajax("ns=<%= request.ns %>&action=save_row&val="+YAHOO.lang.JSON.stringify(newObj), "editRow", function(response) {
        refreshTable();
    });
    createRecordPanel.hide();
}

// This is called when someone clicks "Add Field" in the Edit Record Dialog
function addField(elem) {
    // Let the user choose the field type
    var bd = document.getElementById(elem);

    var chooser = document.getElementById("chooseTypeDiv"+elem);
    if(!chooser) {
        var newField = document.createElement("div");
        newField.setAttribute("id", "newFieldDiv");
        newField.setAttribute("style", "margin-top: 10px;");
        bd.appendChild(newField);

        chooser = document.createElement("div");
        chooser.setAttribute("id", "chooseTypeDiv"+elem);
        chooser.innerHTML = 'Choose a type: <select id="selectFieldType" onchange="makeField(\''+elem+'\')"><option value=""></option><option value="string">String</option><option value="number">Number</option><option value="boolean">Boolean</option><!--<option value="date">Date</option>--></select>';
        bd.appendChild(chooser);
    }
    else {
        chooser.style.display = "block";
    }
}

function makeField(elem) {
    // get the field type
    var selectFT = document.getElementById("selectFieldType");
    var type = selectFT.value;
    if(type=="") return;
    // zero and hide the select
    for(var i=0; i<selectFT.options.length; i++) {
        selectFT.options[i].selected = false;
    }
    document.getElementById("chooseTypeDiv"+elem).style.display = "none";

    // get the new field container
    var con = document.getElementById("newFieldDiv");
    con.setAttribute("class", fcount++);

    // put a label/val field in the container
    var elem = document.createElement("div");
    elem.setAttribute("class", "elem");
    elem.innerHTML = '<label class="obj"><nobr><input type="text" id="label'+fcount+'" style="width: 90px;" />: </nobr></label>';
    if(type == "boolean") {
        elem.innerHTML += '<input type="checkbox" id="f'+fcount+'" class="boolean"><br />';
    }
    else {
        elem.innerHTML += '<input type="text" id="f'+fcount+'" class="'+type+'">';
    }
    fcount++;
    con.appendChild(elem);
}

function editField(id, type, dbid, path) {
    var editSpan = document.getElementById("f"+id);
    editSpan.setAttribute("onclick", "");
    var val = editSpan.innerHTML;
    if(type == "boolean") {
        var yes = (val == "true") ? "checked" : "";
        editSpan.innerHTML = '<input type="checkbox" id="in'+id+'" '+yes+'/><input type="button" value="Save" onclick="saveValue('+id+',\''+type+'\',\''+dbid+'\',\''+path+'\')" />';
    }
    if(type == "string" || type == "number") {
        var xtra = document.getElementById("extra"+id);
        if(xtra)
            editSpan.innerHTML = '<textarea id="in'+id+'">'+xtra.innerHTML+'</textarea><input type="button" value="Save" onclick="saveValue('+id+',\''+type+'\',\''+dbid+'\',\''+path+'\')" />';
        else
            editSpan.innerHTML = '<input type="text" id="in'+id+'" value="'+editSpan.innerHTML+'" /><input type="button" value="Save" onclick="saveValue('+id+',\''+type+'\',\''+dbid+'\',\''+path+'\')" />';
    }
}


<% } // end of if(!top)
%>

var viewOptionsPanel;
var searchFilterPanel;

</script>

<%
core.db.db();
%>


<div id="myMarkedUpContainer" class="yui-skin-sam">
</div>

<%
if(!top) {   %>
<div id="createRecord" style="display:none">
<div class="hd">Add Record</div>
<div class="bd" id="createRecordBd">
    <%
    var x = collection.findOne();
    var fcount = 0;
    for(var b in fields) {
        if(ignore[fields[b]] || fields[b] == "_id")
            continue;


        print('<div class="elem" id="div'+fcount+'"><label class="obj">'+fields[b]+': </label>');
        if(x[fields[b]] == null)
            print('<span class="object">(type unknown)</span>');
        else if(x[fields[b]] instanceof Date)
            print('<input type="text" class="date" id="'+fields[b]+'">');
        else if(typeof x[fields[b]] == "object")
            print('<span class="object">(null object)</span>');
        else if(typeof x[fields[b]] == "boolean")
            print('<input type="checkbox" class="boolean" id="'+fields[b]+'">');
        else
            print('<input type="text" class="'+(typeof x[fields[b]])+'" id="'+fields[b]+'">');

        print('<input type="button" value="x" onclick="deleteProp('+(fcount++)+', [])" />');
        print('</div>');
    }
%>
</div>
<div class="ft">
<input type="button" value="Add Field" onclick="addField('createRecordBd')" />
<input type="button" value="Save" onclick="saveRecord('createRecordBd')"/>
<input type="button" value="Cancel" onclick="createRecordPanel.hide()" />
</div>
</div>

<div id="editRecord" style="display:none">
<div class="hd">Edit Record</div>
<div class="bd" id="bd"></div>
<div class="ft">
  <input type="button" value="Add Field" onclick="addField('bd')" />
  <input type="button" value="Save" id="saveRowBtn" onclick="saveRow()"/>
  <input type="button" value="Cancel" onclick="editRowPanel.hide()" />
</div>
</div>

<% } %>


<!--CSS file (default YUI Sam Skin) -->
<link type="text/css" rel="stylesheet" href="/@@/yui/current/datatable/assets/skins/sam/datatable.css">
<link type="text/css" rel="stylesheet" href="/@@/yui/current/logger/assets/skins/sam/logger.css">
<link rel="stylesheet" type="text/css" href="/@@/yui/current/button/assets/skins/sam/button.css" />
<link rel="stylesheet" type="text/css" href="/@@/yui/current/container/assets/skins/sam/container.css" />


<!-- Dependencies -->
<script type="text/javascript" src="/@@/yui/current/yahoo-dom-event/yahoo-dom-event.js"></script>
<script type="text/javascript" src="/@@/yui/current/element/element-beta-min.js"></script>
<script type="text/javascript" src="/@@/yui/current/button/button-min.js"></script>
<script type="text/javascript" src="/@@/yui/current/datasource/datasource-beta-debug.js"></script>

<!-- OPTIONAL: JSON Utility -->
<script type="text/javascript" src="/@@/yui/current/json/json-min.js"></script>

<!-- OPTIONAL: Drag Drop (enables resizeable or reorderable columns) -->
<script type="text/javascript" src="/@@/yui/current/dragdrop/dragdrop-min.js"></script>

<!-- Source files -->
<script type="text/javascript" src="/@@/yui/current/datatable/datatable-beta-debug.js"></script>
<script type="text/javascript" src="/@@/yui/current/logger/logger-debug.js"></script>
<script type="text/javascript" src="/@@/yui/current/container/container-min.js"></script>
<script type="text/javascript" src="/@@/yui/current/utilities/utilities.js"></script>

<script type="text/javascript">

var fcount = <%= fcount+1 %>;


<%
if(top) {
    var cols = [ "name", "index", "capped" ];
}
%>

addSearchForm = function(n) {
    var str = '<form style="display:inline;" onsubmit="doSearch(); return false;"><input type="text" name="'+n+'" class="minisearch"';
    if(n == "Name") {
        return '<nobr><input type="button" name="action" onclick="doSearch()" value="Search" />'+str+"></nobr>";
    }
    return str+' style="width:100%;">';
}

function doSearch() {
    var passData = getSearchArgs();
    lastSearch = passData;
    refreshTable();
}
function clearSearch() {
    document.getElementById("searchtext").value = "";
    document.getElementById("searchbox").value = "";
    document.getElementById("searchopt").options[0].selected = true;
    currentSearch = {};
    lastSearch = "";
    refreshTable();
}

var handleNo = function() {
    this.hide();
}

var currentPage = 1;
function loadPage(pagenum) {
    currentPage = pagenum;
    refreshTable();
}

<%
if(top) {
    %>

    var handleDrop = function() {
        ajax("action=drop&ns="+tablename, "editDb", function(x) {
            refreshTable();
        });
        this.hide();
    }

    function getValidation(tablename) {
        ajax("action=validation&ns="+tablename, "table", function(response) {
            var simpledialog1 = new YAHOO.widget.SimpleDialog("simpledialog1",
                { width: "300px",
                fixedcenter: true,
                draggable: true,
                visible: false,
                close: true,
                icon: YAHOO.widget.SimpleDialog.ICON_INFO,
                text: response,
                buttons: [ { text:"OK", handler:handleNo, isDefault:true } ]
                } );
            simpledialog1.setHeader("Validation");
            simpledialog1.render("myMarkedUpContainer");
            simpledialog1.show();
        });
    }

    function dropTable(tname) {
        tablename = tname;
        var simpledialog1 = new YAHOO.widget.SimpleDialog("dropTableDlg",
            { width: "300px",
            fixedcenter: true,
            draggable: true,
            visible: false,
            close: true,
            icon: YAHOO.widget.SimpleDialog.ICON_WARN,
            text: "Are you sure you want to drop the collection "+tname+"?",
            buttons: [ { text:"Yes", handler:handleDrop },
            { text:"No", handler:handleNo, isDefault:true } ]
            } );
        simpledialog1.setHeader("Drop Collection");
        simpledialog1.render("myMarkedUpContainer");
        simpledialog1.show();
    }

    <%
}
%>

var tablename = "";

function getSelectedIndices(separator) {
    var idxes = document.getElementsByName(tablename);
    var list = [];
    for(var i=0; i<idxes.length; i++) {
        if (idxes[i].checked)
            list.push( idxes[i].value );
    }
    return list.join(separator);
}


function dropIndex(id) {
    var handleIDrop = function() {
        ajax("action=dropI&ns=<%= request.ns %>&idx="+id, "editDb", refreshTable);
        document.getElementById("li"+id).style.display = "none";
        this.hide();
    }
    var simpledialog1 = new YAHOO.widget.SimpleDialog("dropTableDlg",
        { width: "300px",
        fixedcenter: true,
        draggable: true,
        visible: false,
        close: true,
        icon: YAHOO.widget.SimpleDialog.ICON_WARN,
        text: "Are you sure you want to drop the index "+id+" from <%= request.ns %>?",
        buttons: [ { text:"Yes", handler:handleIDrop },
        { text:"No", handler:handleNo, isDefault:true } ]
        } );
    simpledialog1.setHeader("Drop Index");
    simpledialog1.render("myMarkedUpContainer");
    simpledialog1.show();
}


function refreshTable(passData){
    if(passData)
        passData = passData+"&";
    else
        passData = "";
    ajax("<%= request.ns ? 'ns='+request.ns+'&' : '' %>action=search&currentPage="+currentPage+"&sortcol="+currentSort.col+"&sortdir="+currentSort.dir+"&"+passData+lastSearch, "table", function(response) {
        document.getElementById("myCollection").innerHTML = response;

        var column = document.getElementById("thlink"+currentSort.col);
        column.className = (currentSort.dir == 1) ? "sort-up" : "sort-down";
    });
}


function getSearchArgs() {
    return document.getElementById("searchopt").value + "=" + document.getElementById("searchtext").value;
}

function toggleCollapse(key) {
    // build colspanElems the first time through
    if(!document.getElementById("col"+key).style.visibility || !document.getElementById("col"+key).style.visibility == "visible") {
        document.getElementById("col"+key).style.width = "1px";
//        document.getElementById("col"+key).style.visibility = "collapse";
    }
    else {
        document.getElementById("col"+key).style.visibility = "visible";
    }
}


<%
if(!top) {
    %>
    createRecordPanel = new YAHOO.widget.Panel("createRecord", { visible:false, constraintoviewport: true, fixedcenter: true } );
    createRecordPanel.render("myMarkedUpContainer");
    document.getElementById("createRecord").style.display = "block";

    editRowPanel = new YAHOO.widget.Panel("editRecord", { visible: false, constraintoviewport: true, fixedcenter: true });
    editRowPanel.render("myMarkedUpContainer");
    document.getElementById("editRecord").style.display = "block";

    viewOptionsPanel = new YAHOO.widget.Panel("viewOptions", {visible: false, contraintoviewport: true, fixedcenter: true });
    viewOptionsPanel.render("myMarkedUpContainer");
    document.getElementById("viewOptions").style.display = "block";

    searchFilterPanel = new YAHOO.widget.Panel("searchFilter", {visible: false, contraintoviewport: true, fixedcenter: true });
    searchFilterPanel.render("myMarkedUpContainer");
    document.getElementById("searchFilter").style.display = "block";
    <%
}
%>

</script>

<%
if(top)
    var introMsg = "";

if(top) {
   var searchopts = [ {name : "NAME", className: "sort-down"}, {name : "INDICES" }, {name : "CAPPED", className: "center"} ];
}
else {
    var searchopts = [];
    searchopts.push({"name" : "_id", className: "sort-up" });
    for(var i in f) {
        if(ignore[i] || i == "_id") continue;
        searchopts.push({"name" : i, className: "" });
    }
}
core.admin.pieces.dbview({ hdr : hdr,
                           introMsg: introMsg,
                           idxes : idxes,
                           idxid : idxid,
                           validation : validation });

%>
<div id="myCollection">
<%
core.admin.table();
%>
</div>

<script>

function fnCallback(e) {
    if(e.target.className != "partialText" )
        return;

    if(e.ctrlKey == false) {
        var divs = YAHOO.util.Dom.getElementsByClassName("fullText");
        for(var i=0; i<divs.length; i++) {
            divs[i].style.display = "none";
        }
    }
    if(YAHOO.util.Dom.getNextSibling(e.target))
        YAHOO.util.Dom.getNextSibling(e.target).style.display = "block";
}

document.getElementById("myCollection").addEventListener('click', fnCallback, false);

</script>
