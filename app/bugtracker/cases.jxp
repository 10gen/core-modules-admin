<%
core.content.table();
core.content.html();
core.user.user();
core.user.auth();
core.app.bugtracker.data.feature();
core.net.url();
head.push("<link rel=\"stylesheet\" href='assets/bugtracker.css' type=\"text/css\"/>");
%>


<html>
    <head>
        <title>Cases List</title>
        <link rel="stylesheet" type="text/css" href="/@@/yui/current/menu/assets/skins/sam/menu.css">
        <script type="text/javascript" src="/@@/yui/current/yahoo-dom-event/yahoo-dom-event.js"></script>
        <script type="text/javascript" src="/@@/yui/current/container/container_core.js"></script>
        <script type="text/javascript" src="/@@/yui/current/menu/menu.js"></script>
        <script type="text/javascript" src="assets/menu.js"></script>
    </head>
    <body class="yui-skin-sam">
        <div id="top_menu" class="yuimenubar">
            <div class="bd">
                <ul class="first-of-type">
                    <li class="yuimenubaritem first-of-type"><a href="case_edit">New case</a></li>
                    <li class="yuimenubaritem first-of-type"><a href="<%= new URL(request.getURL()).addArg("owner", user.name).addArg("status", "new")%>">My new bugs</a></li>
                    <li class="yuimenubaritem first-of-type"><a href="project_edit">Edit a project</a></li>
                </ul>
            </div>
        </div>

        <div id="yui-main">

    <% if(request.msg){ %>
        <div class="notice"><%= content.HTML.escape_html(request.msg) %>
    <% } %>

<div id="bugJar">
<%
/*
    var tab = new htmltable({
         ns: db.bugtracker.cases,
         id: "bug_table",
         cols: [
            {name: "number", isLink: true, searchWidth: 3, heading: "ID", cssClassName: 'field', view: function(n) { return parseInt(n).toFixed(0); } },
            {name: "title", isLink: true, heading: "Name", searchWidth: 40, cssClassName: 'field'},
            {name: "owner", searchWidth: 12, heading: "Owner", cssClassName: 'field', view: function(u) { if(u) return u.name; else return "none"; },
             queryForm: function(name) {
                 // Search insensitively on the username. If we don't find one,
                 // just return some value that should never occur.
                 var user = db.users.findOne({name: new RegExp(name, 'i')});
                 if(user) return user;
                 return -1;
             }},
            {name: "status", searchWidth: 10, heading: "Status", cssClassName: 'field'},
            {name: "severity", searchWidth: 10, heading: "Severity", cssClassName: 'field'},
            {name: "type", searchWidth: 10, heading: "Type", cssClassName: 'field', view: function(x) { return x? x: "none"; }},
            {name: "project", searchWidth: 10, heading: "Project", cssClassName: 'field', view: function(u) { if(u) return u.name; else return "none"; },
            queryForm: function(u) { return db.bugtracker.projects.findOne({name: new RegExp(u)});} },
            {name: "area", searchWidth: 10, heading: "Area", cssClassName: 'field'}
        ],
        detailUrl: "case_edit?id=",
    });

tab.dbview(tab.find(null, {number: 1}));
*/
%>

</div>


<script type="text/javascript" src="http://yui.yahooapis.com/2.5.0/build/yuiloader/yuiloader-beta-min.js" ></script>
<script>

var liveDataSource = [
          <% var liveDataCursor = db.bugtracker.cases.find().toArray();
     for(var i=0; liveDataCursor && i<liveDataCursor.length; i++) {
          print("{");
               %>
               number: "<%= liveDataCursor[i].number.toFixed(0) %>",
          title: "<%= liveDataCursor[i].title %>",
          owner: "<%= liveDataCursor[i].owner.name %>",
          status: "<%= liveDataCursor[i].status %>",
          severity: "<%= liveDataCursor[i].severity %>",
          type: "<%= liveDataCursor[i].type %>",
          project: "<%= liveDataCursor[i].project %>",
          area: "<%= liveDataCursor[i].area %>"
               <%
          print("}");
          if(i<liveDataCursor.length-1)
               print(",");
     }
          %>
] ;


var loader = new YAHOO.util.YUILoader( {
     require: ["datatable", "json"],
     loadOptional: true,
     onSuccess: function() {
          var myColumnDefs = [
               {key:  "number", label:"ID", sortable:true},
               {key: "title", label:"Name", sortable:true},
               {key: "owner", label:"Owner", sortable:true},
               {key: "status",label:"Status", sortable:true},
               {key: "severity",label:"Severity", sortable:true},
               {key: "type",label:"Type", sortable:true},
               {key: "project",label:"Project", sortable:true},
               {key: "area",label:"Area", sortable:true}
          ];
          var myDataSource = new YAHOO.util.DataSource(liveDataSource);
          myDataSource.responseType = YAHOO.util.DataSource.TYPE_JSARRAY;
          myDataSource.responseSchema = {
               fields: [ {key:"number", parser:YAHOO.util.DataSource.parseString}, "title", "owner", "status", "severity", "type", "project", "area" ]
          };
          var myDataTable = new YAHOO.widget.DataTable("bugJar", myColumnDefs, myDataSource, {sortedBy:{key:"number",dir:YAHOO.widget.DataTable.CLASS_DESC}});
     }
});

loader.insert();
</script>

</div>
</body>
