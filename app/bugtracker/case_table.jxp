<%

core.ext.pluck();
core.io.marshal();
core.io.encode.json();

var liveDataCursor, query;

if(request.action && request.action == "?") {
     for(var q in request) {
          if(q != "action" && request[q] != "") {
               query = new RegExp("(.*)"+request[q]+"(.*)", "i");
               searchobj = {};
               searchobj[q] = query;
               liveDataCursor = db.bugtracker.cases.find(searchobj).toArray();
               break;
          }
     }
}


if(request.action == "change") {
     var cases = request.row.split(",");
     var cat = request.src;
     var subcat = request.dest;
     for(var x in cases) {
          var c = db.bugtracker.cases.findOne( { _id: cases[x] } );

          // Sooooo bad
          if(cat == "owner" || cat == "project") {
               if(!c[cat] || typeof c[cat] != "Object")
                    c[cat]={};
               c[cat].name = subcat;
          }
          else
               c[cat] = subcat;

          db.bugtracker.cases.save(c);
          log(tojson(c));
     }
}
else if(request.action == "delete") {
     var cases = request.row.split(",");
     for(var x in cases)
          db.bugtracker.cases.remove( { _id: cases[x] } );
}


if(!liveDataCursor) {
    liveDataCursor = db.bugtracker.cases.find().sort({number: 1}).toArray();
}

print(io.Encode.JSON({rows: io.Marshal(liveDataCursor, {id: "_id", number: true,
                                                        title: true, owner: Ext.pluck("name"),
                                                        status: true, severity: true, type: true,
                                                        project: function(p){ return p? p.name: "none"},
                                                        area: true})}));
%>

