<% /**
*      Copyright (C) 2008 10gen Inc.
*  
*    Licensed under the Apache License, Version 2.0 (the "License");
*    you may not use this file except in compliance with the License.
*    You may obtain a copy of the License at
*  
*       http://www.apache.org/licenses/LICENSE-2.0
*  
*    Unless required by applicable law or agreed to in writing, software
*    distributed under the License is distributed on an "AS IS" BASIS,
*    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*    See the License for the specific language governing permissions and
*    limitations under the License.
*/ %>

<%
/* everyone is allowed to read the source code in corejs and samples. */
    var _openAccess = false;

var mylog = log.admin.index.debug;

// AJAX functions that do not require headers/footers
var ajaxFunctions = [ "showTable", "table", "editCron", "blog/autosave", "doc" ];

_openAccess =
    request.getURI().match( /^.admin\/doc$/ ) &&
    ( request.getHost() == "corejs.10gen.com" || request.getHost() == "samples.10gen.com");

core.user.user();
core.user.auth();

if ( ! user ){
    user = Auth.getUser( request );
}

var sectionName = request.getURI().replace( /.*admin\/*/ , "" ).replace( /\.jxp/ , "" );
sectionName = sectionName.replace(/^\/(index)?$/, '');
if ( sectionName.endsWith("/") && sectionName.length > 1 )
    sectionName += "index";

if ( sectionName == "" || sectionName.match( /^index/ ) ){
    sectionName = null;
    if(user)
        sectionName = user.adminSection;
    if(sectionName == null)
        sectionName = "welcome";
}

mylog( "sectionName [" + sectionName + "]" );

var allowed = _openAccess;

/*
 *  check to see if the site set permissioning for the admin module.  if not, make a dummy that returns false as this is
 *  testing for non-admin users
 */
var perm = (allowModule && allowModule.admin) ? allowModule.admin.permissions : { allowed : function() { return false; }};

if( ! allowed && user && perm.allowed(user, request, sectionName) )
    allowed = true;

if ( ! allowed && user && user.isAdmin() ){
    allowed = true;
}

if ( ! allowed ){
    return Auth.cookie.reject( request , response , null, {
        reason: "You cannot access the admin application because you are not an admin.",
        failto: request.getURL(),
        css: "/admin/assets/login.css",
    });
}

assert( adminRoot );
var sectionMap = adminRoot.data.sectiontree().reverse;

var sectionList = sectionMap[sectionName];

// map main sections to default pages
var defaultPage = {
    'statistics' : 'usage',
    'database' : 'dbview',
    'logs' : 'logScroll'
    };

var section = null;

var sectionHeader = null;
var sectionFooter = null;

if ( sectionName.match( /^my\// ) && local.admin ){
    var stripped = sectionName.substring(3);
    if( stripped.match( /^modules\// ) ){
        var module = stripped.replace( /^modules\// , '' );
        var pair = module.split( '/' );
        // Check that this module is actually installed on the site
        if(version[ pair[ 0 ] ]){
            section = local.modules[ pair[ 0 ] ].admin[ pair[ 1 ] ];
        }
    }
    if(! section){
        section = local.admin[ sectionName.substring( 3 )];
    }
    if ( section && local.admin.pieces ){
        sectionHeader = local.admin.pieces.header;
        sectionFooter = local.admin.pieces.footer;
    }
}

// if there is a file /admin/cloud.jxp, and a request goes to /admin/cloud/asd should route cloud.jxp
if ( section == null && sectionName.match( /\// ) ){
    var idx = sectionName.indexOf( "/" );
    var moduleName = sectionName.substring( 0 , idx );
    if ( adminRoot[ moduleName ] ){
        request.tab = sectionName.substring( idx + 1 );
        sectionName = moduleName;
        section = adminRoot[ moduleName];
        mylog( " creating tab [" + request.tab + "]" );
    }
}

if ( section == null && sectionName.match( /\// ) ){
    var idx = sectionName.indexOf( "/" );
    var moduleName = sectionName.substring( 0 , idx );
    var piece = sectionName.substring( idx + 1 );

    var locations = [core, core.modules];
    for(var i in locations){
        var loc = locations[i];
        var moduleThing = loc[moduleName];
        if ( moduleThing ){
            if ( moduleThing.admin && moduleThing.admin[ piece ] ){
                section = moduleThing.admin[piece];
                if ( section && moduleThing.admin.pieces ){
                    sectionHeader = moduleThing.admin.pieces.header;
                    sectionFooter = moduleThing.admin.pieces.footer;
                }
            }
            break;
        }
    }
}

if ( section == null ) {
    if(defaultPage[sectionName])
        section = adminRoot[ defaultPage[sectionName] ];
    else
        section = adminRoot[ sectionName ];
}

if ( isFunction( section ) &&
     ( section.getName().match( /\._/ )
       || section.getName().match( /admin.ed/ ) ) ){
    section();
    return;
}

if ( ajaxFunctions.indexOf(sectionName) == -1 ) {
    adminRoot.pieces.header({sectionList: sectionList,
                             });

    if ( isFunction( sectionHeader ) )
        sectionHeader();
}

if ( isFunction( section ) ){
    if( ! ajaxFunctions.contains(sectionName) ){
        user.adminSection = sectionName;
        db.users.save(user);
    }
    section();
}
else {
    print( "<p>Welcome <b>" +  user.name  + "</b> to the admin section for <b>" +  db.getName() + "</b>" );
    if ( local.admin && local.admin[ "_index" ] )
        local.admin[ "_index" ]();
}

if ( ajaxFunctions.indexOf(sectionName) == -1 ) {
   if ( isFunction( sectionFooter ) )
       sectionFooter();

    adminRoot.pieces.footer();
}
%>
