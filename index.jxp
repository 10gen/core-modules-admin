<%
/* everyone is allowed to read the source code in corejs and samples. */
    var _openAccess = false;

// AJAX functions that do not require headers/footers
var ajaxFunctions = [ "showTable", "table" ];

_openAccess =
    request.getURI().match( /^.admin\/doc$/ ) &&
    ( request.getHost() == "corejs.10gen.com" || request.getHost() == "samples.10gen.com");

core.user.user();
core.user.auth();

if ( ! user ){
    user = Auth.getUser( request );
}

if ( !_openAccess && (! user || ! user.isAdmin()) ){
    return Auth.cookie.reject( request , response );
}

var sectionName = request.getURI().replace( /.*admin\/*/ , "" ).replace( /\.jxp/ , "" );
if ( sectionName == "" || sectionName.match( /^index/ ) )
    sectionName = "usage";


// Maps jxp names to sections
var sectionMap = {
    'system': ['system'],

    'usage' : ['system', 'usage'],

    'users': ['system', 'users'],
    'user': ['system', 'users'],

    'database': ['system', 'database', 'dbview'],
    'dbview': ['system', 'database', 'dbview'],
    'dbprofile': ['system', 'database', 'dbprofile'],

    'files': ['system', 'files'],
    'cron': ['system', 'cron'],

    'cron': ['system', 'cron'],
    'editCron': ['system', 'cron'],

    'logs': ['system', 'logs', 'logScroll'],
    'logScroll': ['system', 'logs', 'logScroll'],
    'logMemory': ['system', 'logs', 'logMemory'],

    'editor': ['editor', 'editor'],
    'gitLocal': ['git', 'git'],

    'doc': ['docs', 'docs'],
    'applications': ['applications'],
};
var sectionList = sectionMap[sectionName];



var section = null;

var sectionHeader = null;
var sectionFooter = null;

if ( sectionName.match( /^my\// ) && jxp.admin ){
    section = jxp.admin[ sectionName.substring( 3 )];
    if ( section && jxp.admin.pieces ){
        sectionHeader = jxp.admin.pieces.header;
        sectionFooter = jxp.admin.pieces.footer;
    }
}

if ( section == null && sectionName.match( /\// ) ){
    var idx = sectionName.indexOf( "/" );
    var moduleName = sectionName.substring( 0 , idx );
    var piece = sectionName.substring( idx + 1 );

    var locations = [core[moduleName], core.app[moduleName]];
    for(var i in locations){
        var moduleThing = locations[i];
        if ( moduleThing && moduleThing.admin && moduleThing.admin[ piece ] ){
            section = moduleThing.admin[piece];
            if ( section && moduleThing.admin.pieces ){
                sectionHeader = moduleThing.admin.pieces.header;
                sectionFooter = moduleThing.admin.pieces.footer;
            }
            break;
        }
    }
}

if ( section == null )
    section = core.admin[ sectionName ];

if ( isFunction( section ) &&
     ( section.getName().match( /\._/ )
       || section.getName().match( /admin.ed/ ) ) ){
    section();
    return;
}

if ( ajaxFunctions.indexOf(sectionName) == -1 ) {
    core.admin.pieces.header({sectionList: sectionList,
                             });

    if ( isFunction( sectionHeader ) )
        sectionHeader();
}

if ( isFunction( section ) )
    section();
else {
    print( "<p>Welcome <b>" +  user.name  + "</b> to the admin section for <b>" +  db.getName() + "</b>" );
    if ( jxp.admin && jxp.admin[ "_index" ] )
        jxp.admin[ "_index" ]();
}

if ( ajaxFunctions.indexOf(sectionName) == -1 ) {
   if ( isFunction( sectionFooter ) )
       sectionFooter();

    core.admin.pieces.footer();
}
%>
